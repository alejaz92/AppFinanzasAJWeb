@model AppFinanzasWeb.ViewModels.MovimientoReintegroViewModel
@{
    ViewData["title"] = "Registrar Reintegro";
}

<div class="container mt-5">
    <h2>Reintegro</h2>

    <form asp-action="Reintegro" method="post">
        <input type="hidden" asp-for="movimiento.IdMovimiento" />
        <input type="hidden" asp-for="movimiento.Monto" class="form-control mb-3" id="montoInicial" />
        <div class="row">
            <div class="col-md-6">                

                <div class="form-group">
                    <label class="form-label">Monto Original</label>
                    <input type="text" asp-for="movimiento.MontoString" class="form-control mb-3"
                           readonly />
                </div>
                <div class="form-group">
                    <label class="form-label">Fecha</label>
                    <input type="date" asp-for="movimiento.Fecha" class="form-control mb-3" readonly />
                </div>
                <div class="form-group">
                    <label class="form-label">Clase de Movimiento</label>
                    <input type="text" asp-for="movimiento.ClaseMovimientoNombre" class="form-control mb-3" readonly />
                </div>
                <div class="form-group">
                    <label class="form-label">Detalle</label>
                    <input type="text" asp-for="movimiento.Comentario" class="form-control mb-3" readonly />
                </div>
                <div class="form-group">
                    <label class="form-label">Cuenta Original</label>
                    <input type="text" asp-for="movimiento.CuentaNombre" class="form-control mb-3" readonly />
                </div>
                <div class="form-group">
                    <label class="form-label">Moneda</label>
                    <input type="text" asp-for="movimiento.ActivoNombre" class="form-control mb-3" readonly />
                </div>
                
            </div>
            
            <div class="col-md-6">

                <div class="form-group">
                    <label class="form-label">Fecha Reintegro</label>
                    <input type="date" asp-for="fechaReint" class="form-control mb-3" value="movimiento.Fecha"/>
                </div>
                <div class="form-group">
                    <label class="form-label">Cuenta Devolución</label>
                    <select class="form-control mb-3" asp-for="cuentaReint" class="form-control mb-3" asp-items="ViewBag.Cuentas"
                            value="@Model.movimiento.CuentaNombre">
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">Monto a Reintegrar</label>
                    <input class="form-control" asp-for="montoReint" class="form-control mb-3"
                           id="montoReintegrar" type="number" value="" placeholder="$0,00" />
                </div>
                <div class="d-flex justify-content-end mt-4">
                    <a class="btn btn-secondary" style="margin-right: 10px;" asp-action="Index">Volver</a>
                    <button type="submit" class="btn btn-primary">Registrar</button>                    
                </div>
                
            </div>            
        </div>        
    </form>
</div>

@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const montoInicialInput = document.getElementById('montoInicial');
            const montoReintegrarInput = document.getElementById('montoReintegrar');

            // Función para desformatear valores de campo
            function parseCurrency(value) {
                return parseFloat(value.replace('$', '').replace(/\./g, '').replace(',', '.')) || 0;
            }

            // Manejar el evento input en montoReintegrar
            montoReintegrarInput.addEventListener('input', function () {
                const rawValue = parseCurrency(this.value);
                const montoInicial = parseCurrency(montoInicialInput.value);

                if (rawValue > montoInicial) {
                    this.setCustomValidity('El monto a reintegrar no puede ser mayor que el monto inicial.');
                } else {
                    this.setCustomValidity('');
                }
            });

            // Manejar el evento blur en montoReintegrar
            montoReintegrarInput.addEventListener('blur', function () {
                const rawValue = parseCurrency(this.value);
                const montoInicial = parseCurrency(montoInicialInput.value);

                if (rawValue > montoInicial) {
                    this.setCustomValidity('El monto a reintegrar no puede ser mayor que el monto inicial.');
                } else {
                    this.setCustomValidity('');
                }
            });



        });
    </script>
}